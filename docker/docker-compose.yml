version: "3.9"
services:
  db:
    container_name: rederly_db
    image: postgres:12.6
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "65432:5432"
      - "5432"

  backend:
    build: ../source/backend
    container_name: rederly_backend
    volumes:
      - type: bind
        source: ./configurations/backend.env
        target: /rederly/.env
      - type: bind
        source: ../source/backend/.sequelizerc
        target: /rederly/.sequelizerc
    depends_on:
      - db

  scheduler-redis:
    image: "redis:alpine"

  scheduler:
    container_name: rederly_scheduler
    build: ../source/scheduler
    depends_on:
      - scheduler-redis
    environment:
      REDIS_HOST: scheduler-redis

  library-browser:
    build: ../source/library-browser
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./configurations/library-browser.env
        target: /rederly/.env


  rederly-course-export:
    container_name: rederly_rederly-course-export
    build:
      context: ../source/rederly-course-export
      dockerfile: Dockerfile.standalone
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./configurations/rederly-course-export.env
        target: /rederly-course-export-standalone/.env
      - type: bind
        source: ./renderer-data
        target: /renderer-data
      

  bulk-pdf-export:
    container_name: rederly_bulk-pdf-export
    build: '../source/bulk-pdf-export'
    cap_add: 
      - SYS_ADMIN
    volumes:
      - type: bind
        source: ./configurations/bulk-pdf-export.env
        target: /app/.env
    networks:
      default:
      localstacknet:    

  renderer:
    container_name: rederly_renderer
    build: '../source/renderer'
    volumes:
      - type: bind
        source: ./renderer-data/private
        target: /usr/app/private
      - type: bind
        source: ./renderer-data/webwork-open-problem-library
        target: /usr/app/webwork-open-problem-library
    
  
  frontend-build:
    build:
      context: ../source/frontend
      dockerfile: build.Dockerfile

  proxy:
    build: ./nginx
    depends_on:
      - frontend-build
      - backend
      - library-browser
    ports:
      - "3000:80"
    container_name: rederly_proxy
    volumes:
      - type: bind
        source: ../source/renderer/lib/WeBWorK/htdocs
        target: /usr/share/nginx/html/webwork2_files
    # This is for quicker debugging:
    # 1. Uncomment the rederly.nginx.conf volume
    # 2. Make changes to the file
    # 3. Reload nginx: `docker exec -it rederly_proxy nginx -s reload`
      - type: bind
        source: ./nginx/rederly.nginx.conf
        target: /etc/nginx/conf.d/rederly.nginx.conf
    # networks:
    #   default:
    #   localstacknet:
    #     aliases:
    #       - attachments.localstack
    #       - localstack
    
  localstack:
    # container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    # network_mode: bridge
    ports:
      # - "53:53"
    #   - "53:53/udp"
    #   - "443:443"
      # - "4566:4566"
    #   - "4571:4571"
    #   - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
      - "4566-4583:4566-4583"
    environment:
      - SERVICES=${SERVICES-s3,lambda,apigateway }
      - DEBUG=${DEBUG- }
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-lambda }
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
    volumes:
      # Of what we are using this only supports s3 (not lambda or apigateway)
      - "localstack-vol:/tmp/localstack"
      # - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      default:
      localstacknet:
        aliases:
          - attachments.localstack
          - rederly-exports-dev.localstack
          - exports.localstack
          - localstack

volumes:
  dbdata:
  localstack-vol:
networks:
  localstacknet:
